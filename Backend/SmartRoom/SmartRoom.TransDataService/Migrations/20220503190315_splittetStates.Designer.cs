// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartRoom.TransDataService.Persistence;

#nullable disable

namespace SmartRoom.TransDataService.Migrations
{
    [DbContext(typeof(TransDataDBContext))]
    [Migration("20220503190315_splittetStates")]
    partial class splittetStates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.BinaryState", b =>
                {
                    b.Property<Guid>("EntityRefID")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Value")
                        .HasColumnType("boolean");

                    b.ToTable("BinaryStates");
                });

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.MeasureState", b =>
                {
                    b.Property<Guid>("EntityRefID")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Value")
                        .HasColumnType("double precision");

                    b.ToTable("MeasureStates");
                });
#pragma warning restore 612, 618
        }
    }
}

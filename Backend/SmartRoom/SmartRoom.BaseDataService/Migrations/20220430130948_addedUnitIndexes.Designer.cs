// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartRoom.BaseDataService.Persistence;

#nullable disable

namespace SmartRoom.BaseDataService.Migrations
{
    [DbContext(typeof(SmartRoomDBContext))]
    [Migration("20220430130948_addedUnitIndexes")]
    partial class addedUnitIndexes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Building")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("integer");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Size")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.RoomEquipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EquipmentRef")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoomID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoomID");

                    b.HasIndex("Name", "EquipmentRef")
                        .IsUnique();

                    b.ToTable("RoomEquipments");
                });

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.RoomEquipment", b =>
                {
                    b.HasOne("SmartRoom.CommonBase.Core.Entities.Room", null)
                        .WithMany("RoomEquipment")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartRoom.CommonBase.Core.Entities.Room", b =>
                {
                    b.Navigation("RoomEquipment");
                });
#pragma warning restore 612, 618
        }
    }
}
